  //f(i)=c1*F(i-1)+c2*F(i-2)+c;===================>equatioin solution
  

#include <iostream>
#include<vector>
using namespace std;
#define matrix vector<vector<ll>>
#define mod 1000000000
#define vec vector<ll>
#define ll long long 
vec b,c;
ll k;
//matrix multiplication
matrix multiply(matrix a,matrix b){
    matrix c(k+2,vector<ll>(k+2));
    for(int i=1;i<=k+1;i++){
        for(int j=1;j<=k+1;j++){
            for(int x=1;x<=k+1;x++){
                c[i][j]=(c[i][j]+(a[i][x]*b[x][j])%mod)%mod;
            }
        }
    }
    return c;
}
//power matrix
matrix pow(matrix a,ll n){
    if(n==1) return a;
    if(n&1) return multiply(a, pow(a,n-1));
    else return multiply(pow(a,n/2),pow(a,n/2));
}
ll compute(ll n){
if(n==0){
    return 0;
}
if(n<=k){
    return b[n-1];
}
else{
    //F1 matrix
    vec F1(k+2);
    for(int i=1;i<=k+1;i++){
        if(i<k+1) F1[i]=b[i-1];
        else F1[i]=c[k];
        cout<<F1[i]<<endl;
    }
    //Transformation matrix
    matrix T(k+2,vector<ll>(k+2));
    for(int i=1;i<=k+1;i++){
        for(int j=1;j<=k+1;j++){
            if(i<k){
                if(i+1==j ){T[i][j]=1;
                }
                else T[i][j]=0;        
              }
          else if(i==k){
           if(k-j>=0) T[i][j]=c[k-j];
              else T[i][j]=1;
          }
             else if(i==k+1){
                 if(j==i){
                T[i][j]=1;
              }else T[i][j]=0;}
         else{
             T[i][j]=0;
         }
        }
    }
    //=====================================
    cout<<"Transformation matrix"<<endl;
    for(int i=1;i<=k+1;i++){
        for(int j=1;j<=k+1;j++){
            cout<<T[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
    //==========================================
    // power of matrix T^N-1
    T=pow(T,n-1);
     //=====================================
    cout<<"Transformation matrix ^ N-1"<<endl;
    for(int i=1;i<=k+1;i++){
        for(int j=1;j<=k+1;j++){
            cout<<T[i][j]<<" ";
        }
        cout<<endl;
    }
    cout<<endl;
    //==========================================
    //calculate T^N-1*F1
    ll res=0;
    for(int i=1;i<=k+1;i++){
        res=(res+T[1][i]*F1[i])%mod;
    }
    return res;
}
}
int main() {
    int test;
    ll N;
    cin>>test;
    for(int i=0;i<test;i++){
     cin>>k;
    ll num;
    for(int i=0;i<k;i++){
        cin>>num;
        b.push_back(num);
    }
    for(int i=0;i<k+1;i++){
        cin>>num;
        c.push_back(num);
    }
    cin>>N;
    ll ans=compute(N);
    cout<<ans<<endl;
    b.clear();
    c.clear();
    }
}

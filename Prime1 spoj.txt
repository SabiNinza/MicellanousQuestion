#include<bits/stdc++.h>
using namespace std;

vector<int> primes;
void preCompute() {
    primes.push_back(2);
    for (int i = 3; i <= 32000; i+=2) 
    {
        bool isprime = true;
        int cap = sqrt(i) + 1;
 
        vector<int>::iterator p;
        for (p = primes.begin(); p != primes.end(); p++) {
            if (*p >= cap) break;
            if (i % *p == 0) {
                isprime = false;
                break;
            }
        }
        if (isprime) primes.push_back(i);
    }
}

int main()
{
	preCompute(); // Precompute primes upto sqrt(10^9)
	int t;
	cin>>t;
	while(t--)
	{
		int m, n;
		cin >> m >> n;
		if(m < 2) m = 2;
		int cap = sqrt(n) + 1;
		set<int> notprime;	
		vector<int>::iterator p;
        for (p = primes.begin(); p != primes.end(); p++) 
        {
 
            if (*p >= cap) break;
            int start;
 
            if (*p >= m) start = (*p)*2;
            else start = m + ((*p - m % *p) % *p);
 
            for (int j = start; j <= n; j += *p) 
            {
                notprime.insert(j);
            }
        }
 
        for (int i = m; i <= n; i++) {
            if (notprime.count(i) == 0) 
            {
                cout << i << endl;
            }
        }
        cout << endl;
    }
    
} 